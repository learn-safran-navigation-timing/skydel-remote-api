#pragma once

#include <memory>
#include "command_result.h"
#include "command_factory.h"


namespace Sdx
{
  namespace Cmd
  {
    ///
    /// Result of IsManualSbasMessageSequence.
    ///
    /// Name    Type Description
    /// ------- ---- ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
    /// Enabled bool If enabled (true), Skydel will use a manually imported SBAS message sequence as the source. If disabled (false, default), the SBAS message sequence will be automatically generated by Skydel.
    ///

    class IsManualSbasMessageSequenceResult;
    typedef std::shared_ptr<IsManualSbasMessageSequenceResult> IsManualSbasMessageSequenceResultPtr;
    
    
    class IsManualSbasMessageSequenceResult : public CommandResult
    {
    public:
      static const char* const CmdName;
      static const char* const Documentation;
      static const char* const TargetId;


      IsManualSbasMessageSequenceResult();

      IsManualSbasMessageSequenceResult(bool enabled);

      IsManualSbasMessageSequenceResult(CommandBasePtr relatedCommand, bool enabled);

      static IsManualSbasMessageSequenceResultPtr create(bool enabled);

      static IsManualSbasMessageSequenceResultPtr create(CommandBasePtr relatedCommand, bool enabled);
      static IsManualSbasMessageSequenceResultPtr dynamicCast(CommandBasePtr ptr);
      virtual bool isValid() const override;
      virtual std::string documentation() const override;
      virtual const std::vector<std::string>& fieldNames() const override;


      // **** enabled ****
      bool enabled() const;
      void setEnabled(bool enabled);
    };
    REGISTER_COMMAND_TO_FACTORY_DECL(IsManualSbasMessageSequenceResult);
  }
}

